const A=n=>n.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#39;"),j=3,y="@tab",T=y.length,I=(n,b)=>(t,a,k,_)=>{if(b.state!==n)return!1;const c=t.bMarks[a]+t.tShift[a],d=t.eMarks[a],r=t.sCount[a];if(t.src.charAt(c)!=="@")return!1;for(let u=0;u<T;u++)if(y[u]!==t.src[c+u])return!1;const e=t.src.slice(c,c+T),s=t.src.slice(c+T,d);if(_)return!0;let i=a+1,p=!1;for(;i<k;i++){const u=t.bMarks[i]+t.tShift[i];if(t.sCount[i]===r&&t.src[u]==="@"){let m=!0;for(let h=0;h<y.length;h++)if(y[h]!==t.src[u+h]){m=!1;break}if(m){p=!0;break}}}const $=t.parentType,f=t.lineMax,o=t.blkIndent;t.parentType="tab",t.lineMax=i-(p?1:0),t.blkIndent=r;const l=t.push(`${n}_tab_open`,"",1),[,x,g]=/^(.*?)(?:(?<!\\)#([^#]*))?$/.exec(s.replace(/^:active/,""));l.block=!0,l.markup=e,l.info=x.trim().replace(/\\#/g,"#"),l.meta={active:s.includes(":active")},g&&(l.meta.id=g.trim()),l.map=[a,i-(p?1:0)],t.md.block.tokenize(t,a+1,i+(p?0:1));const v=t.push(`${n}_tab_close`,"",-1);return v.block=!0,v.markup="",t.parentType=$,t.lineMax=f,t.blkIndent=o,t.line=i+(p?0:1),!0},R=(n,b)=>(t,a,k,_)=>{const c=t.bMarks[a]+t.tShift[a],d=t.eMarks[a],r=t.sCount[a];if(t.src[c]!==":")return!1;let e=c+1;for(;e<=d&&t.src[e]===":";)e++;const s=e-c;if(s<3)return!1;const i=t.src.slice(c,e),p=t.src.slice(e,d),[$,f=""]=p.split("#",2);if($.trim()!==n)return!1;if(_)return!0;let o=a+1,l=!1;for(;o<k;o++){const M=t.bMarks[o]+t.tShift[o],S=t.eMarks[o];if(M<S&&t.sCount[o]<r)break;if(t.sCount[o]===r&&t.src[M]===":"){for(e=M+1;e<=S&&t.src[e]===":";e++);if(e-M>=s&&(e=t.skipSpaces(e),e>=S)){l=!0;break}}}const x=t.parentType,g=t.lineMax,v=t.blkIndent,u=b.state;t.parentType=`${n}_tabs`,t.lineMax=o-(l?1:0),t.blkIndent=r;const m=t.push(`${n}_tabs_open`,"",1);m.markup=i,m.block=!0,m.info=$,m.meta={id:f.trim()},m.map=[a,o-(l?1:0)],b.state=n,t.md.block.tokenize(t,a+1,o-(l?1:0)),b.state=u;const h=t.push(`${n}_tabs_close`,"",-1);return h.markup=t.src.slice(c,e),h.block=!0,t.parentType=x,t.lineMax=g,t.blkIndent=v,t.line=o+(l?1:0),!0},J=n=>(b,t)=>{const a=[];let k=-1,_=!1,c=0;for(let d=t+1;d<b.length;d++){const{block:r,meta:e,type:s,info:i}=b[d];if(r){if(s===`${n}_tabs_open`){c++;continue}if(s===`${n}_tabs_close`){if(c===0)break;c--;continue}if(c>0)continue;if(s===`${n}_tab_open`){_=!0,e.index=a.length,e.active&&(k===-1?k=a.length:e.active=!1),a.push({title:i,index:e.index,...e.id?{id:e.id}:{}});continue}if(s===`${n}_tab_close`)continue;_||(b[d].type=`${n}_tabs_empty`,b[d].hidden=!0)}}return{active:k,data:a.map((d,r)=>({...d,active:r===k}))}},q=(n,b)=>{const{info:t,meta:a}=n[b];return{title:t,index:a.index,...a.id?{id:a.id}:{},isActive:!!a.active}},C={state:null},z=(n,b)=>{const{name:t="tabs",openRender:a=(r,e,s,i,p,$)=>{const{active:f,data:o}=r,l=e[s];l.attrJoin("class",`${t}-tabs-wrapper`),l.meta.id&&l.attrJoin("data-id",l.meta.id);const x=o.map(({title:g,id:v},u)=>`<button type="button" class="${t}-tab-button${f===u?" active":""}" data-tab="${u}"${v?` data-id="${A(v)}"`:""}${f===u?" data-active":""}>${A(g)}</button>`);return`<div${$.renderAttrs(l)}>
  <div class="${t}-tabs-header">
    ${x.join(`
    `)}
  </div>
  <div class="${t}-tabs-container">
`},closeRender:k=()=>`  </div>
</div>
`,tabOpenRender:_=(r,e,s,i,p,$)=>{const f=e[s];return f.attrJoin("class",`${t}-tab-content${r.isActive?" active":""}`),f.attrSet("data-index",r.index.toString()),r.id&&f.attrSet("data-id",r.id.toString()),r.isActive&&f.attrJoin("data-active",""),`<div${$.renderAttrs(e[s])}>
`},tabCloseRender:c=()=>`</div>
`}=b??{},d=J(t);n.block.ruler.before("fence",`${t}_tabs`,R(t,C),{alt:["paragraph","reference","blockquote","list"]}),n.block.ruler.before("paragraph",`${t}_tab`,I(t,C),{alt:["paragraph","reference","blockquote","list"]}),n.renderer.rules[`${t}_tabs_open`]=(r,e,s,i,p)=>{const $=d(r,e);return a($,r,e,s,i,p)},n.renderer.rules[`${t}_tabs_close`]=k,n.renderer.rules[`${t}_tab_open`]=(r,e,...s)=>{const i=q(r,e);return _(i,r,e,...s)},n.renderer.rules[`${t}_tab_close`]=c};export{z as tab};
//# sourceMappingURL=browser.js.map
