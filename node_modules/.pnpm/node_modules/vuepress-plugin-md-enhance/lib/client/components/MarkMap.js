import{LoadingIcon as k,decodeData as g}from"@vuepress/helper/client";import{useEventListener as h,useDebounceFn as S}from"@vueuse/core";import{defineComponent as E,toRefs as M,shallowRef as l,ref as R,h as o,onMounted as b,watch as D,nextTick as U,onUnmounted as x}from"vue";import{onContentUpdated as P}from"vuepress/client";import"../styles/markmap.scss";var T=E({name:"MarkMap",props:{id:{type:String,required:!0},content:{type:String,required:!0}},setup(a){const{content:u,id:d}=M(a),n=l(),i=l(),s=R(!1);let t=null;h("resize",S(()=>{t?.fit()},100));const m=()=>{t?.destroy(),t=null},p=async()=>{if(__VUEPRESS_SSR__)return;const[{Transformer:r},{Markmap:c,deriveOptions:f},{Toolbar:v}]=await Promise.all([import("markmap-lib"),import("markmap-view"),import("markmap-toolbar")]),w=new r,{frontmatter:y,root:_}=w.transform(g(a.content));t=c.create(i.value,f({maxWidth:240,...y?.markmap}));const{el:e}=v.create(t);await t.setData(_),await t.fit(),e.style.position="absolute",e.style.bottom="0.5rem",e.style.right="0.5rem",n.value.append(e)};return P(async r=>{r==="mounted"&&(await p(),s.value=!0)}),b(()=>{__VUEPRESS_DEV__&&D([u,d],async()=>{m(),await U(),await p()},{flush:"post"})}),x(m),()=>o("div",{class:"markmap-wrapper",ref:n},[o("svg",{ref:i,class:"markmap-svg",id:a.id}),s.value?null:o(k,{class:"markmap-loading",height:360})])}});export{T as default};
//# sourceMappingURL=MarkMap.js.map
