const R=(p,u)=>{if(typeof u!="object"||!u.name)throw new Error("[@mdit/plugin-container]: 'name' option is required.");const{name:c,marker:l=":",validate:$=e=>e.trim().split(" ",2)[0]===c,openRender:g=(e,t,n,k,o)=>(e[t].attrJoin("class",c),o.renderToken(e,t,n)),closeRender:C=(e,t,n,k,o)=>o.renderToken(e,t,n)}=u,m=l[0],i=l.length,I=(e,t,n,k)=>{const o=e.bMarks[t]+e.tShift[t],h=e.eMarks[t],d=e.sCount[t];if(m!==e.src[o])return!1;let r=o+1;for(;r<=h&&l[(r-o)%i]===e.src[r];)r++;const M=Math.floor((r-o)/i);if(M<3)return!1;r-=(r-o)%i;const _=e.src.slice(o,r),T=e.src.slice(r,h);if(!$(T,_))return!1;if(k)return!0;let s=t+1,x=!1;for(;s<n;s++){const a=e.bMarks[s]+e.tShift[s],b=e.eMarks[s];if(a<b&&e.sCount[s]<d)break;if(e.sCount[s]===d&&m===e.src[a]){for(r=a+1;r<=b&&l[(r-a)%i]===e.src[r];r++);if(Math.floor((r-a)/i)>=M&&(r-=(r-a)%i,r=e.skipSpaces(r),r>=b)){x=!0;break}}}const S=e.parentType,v=e.lineMax,w=e.blkIndent;e.parentType="container",e.lineMax=s,e.blkIndent=d;const f=e.push(`container_${c}_open`,"div",1);f.markup=_,f.block=!0,f.info=T,f.map=[t,s],e.md.block.tokenize(e,t+1,s);const y=e.push(`container_${c}_close`,"div",-1);return y.markup=e.src.slice(o,r),y.block=!0,e.parentType=S,e.lineMax=v,e.blkIndent=w,e.line=s+(x?1:0),!0};p.block.ruler.before("fence",`container_${c}`,I,{alt:["paragraph","reference","blockquote","list"]}),p.renderer.rules[`container_${c}_open`]=g,p.renderer.rules[`container_${c}_close`]=C};export{R as container};
//# sourceMappingURL=index.js.map
