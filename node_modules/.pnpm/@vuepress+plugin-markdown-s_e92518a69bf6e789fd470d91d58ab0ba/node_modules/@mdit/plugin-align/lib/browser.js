const w=(l,a)=>{if(typeof a!="object"||!a.name)throw new Error("[@mdit/plugin-container]: 'name' option is required.");const{name:s,marker:f=":",validate:x=e=>e.trim().split(" ",2)[0]===s,openRender:T=(e,t,u,p,o)=>(e[t].attrJoin("class",s),o.renderToken(e,t,u)),closeRender:v=(e,t,u,p,o)=>o.renderToken(e,t,u)}=a,h=f[0],i=f.length,C=(e,t,u,p)=>{const o=e.bMarks[t]+e.tShift[t],m=e.eMarks[t],d=e.sCount[t];if(h!==e.src[o])return!1;let n=o+1;for(;n<=m&&f[(n-o)%i]===e.src[n];)n++;const M=Math.floor((n-o)/i);if(M<3)return!1;n-=(n-o)%i;const _=e.src.slice(o,n),g=e.src.slice(n,m);if(!x(g,_))return!1;if(p)return!0;let r=t+1,y=!1;for(;r<u;r++){const c=e.bMarks[r]+e.tShift[r],b=e.eMarks[r];if(c<b&&e.sCount[r]<d)break;if(e.sCount[r]===d&&h===e.src[c]){for(n=c+1;n<=b&&f[(n-c)%i]===e.src[n];n++);if(Math.floor((n-c)/i)>=M&&(n-=(n-c)%i,n=e.skipSpaces(n),n>=b)){y=!0;break}}}const I=e.parentType,R=e.lineMax,S=e.blkIndent;e.parentType="container",e.lineMax=r,e.blkIndent=d;const k=e.push(`container_${s}_open`,"div",1);k.markup=_,k.block=!0,k.info=g,k.map=[t,r],e.md.block.tokenize(e,t+1,r);const $=e.push(`container_${s}_close`,"div",-1);return $.markup=e.src.slice(o,n),$.block=!0,e.parentType=I,e.lineMax=R,e.blkIndent=S,e.line=r+(y?1:0),!0};l.block.ruler.before("fence",`container_${s}`,C,{alt:["paragraph","reference","blockquote","list"]}),l.renderer.rules[`container_${s}_open`]=T,l.renderer.rules[`container_${s}_close`]=v},j=l=>{["left","center","right","justify"].forEach(a=>l.use(s=>w(s,{name:a,openRender:()=>`<div style="text-align:${a}">
`})))};export{j as align};
//# sourceMappingURL=browser.js.map
